// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PremierAthletics.Models;

namespace hellosignmvc.Migrations
{
    [DbContext(typeof(PremierAthleticsContext))]
    [Migration("20210604205038_HelloSign")]
    partial class HelloSign
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("PremierAthletics.Models.Athlete", b =>
                {
                    b.Property<string>("AthleteId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("AthleteId");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("PremierAthletics.Models.AthleteTeam", b =>
                {
                    b.Property<int>("AthleteTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AthleteId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TeamId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("AthleteTeamId");

                    b.HasIndex("AthleteId");

                    b.HasIndex("TeamId");

                    b.ToTable("AthleteTeam");
                });

            modelBuilder.Entity("PremierAthletics.Models.Document", b =>
                {
                    b.Property<string>("DocumentID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Filepath")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("DocumentID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("PremierAthletics.Models.DocumentTeam", b =>
                {
                    b.Property<int>("DocumentTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DocumentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TeamId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DocumentTeamId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("TeamId");

                    b.ToTable("DocumentTeam");
                });

            modelBuilder.Entity("PremierAthletics.Models.HSeSignature", b =>
                {
                    b.Property<string>("HSeSignatureId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AthleteId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DocumentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SignatureRequestID")
                        .HasColumnType("longtext");

                    b.HasKey("HSeSignatureId");

                    b.HasIndex("AthleteId");

                    b.HasIndex("DocumentId");

                    b.ToTable("eSignatures");
                });

            modelBuilder.Entity("PremierAthletics.Models.Team", b =>
                {
                    b.Property<string>("TeamId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sport")
                        .HasColumnType("longtext");

                    b.Property<string>("TeamName")
                        .HasColumnType("longtext");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PremierAthletics.Models.AthleteTeam", b =>
                {
                    b.HasOne("PremierAthletics.Models.Athlete", "Athlete")
                        .WithMany("Teams")
                        .HasForeignKey("AthleteId");

                    b.HasOne("PremierAthletics.Models.Team", "Team")
                        .WithMany("Athletes")
                        .HasForeignKey("TeamId");

                    b.Navigation("Athlete");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PremierAthletics.Models.DocumentTeam", b =>
                {
                    b.HasOne("PremierAthletics.Models.Document", "Document")
                        .WithMany("Teams")
                        .HasForeignKey("DocumentId");

                    b.HasOne("PremierAthletics.Models.Team", "Team")
                        .WithMany("Documents")
                        .HasForeignKey("TeamId");

                    b.Navigation("Document");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PremierAthletics.Models.HSeSignature", b =>
                {
                    b.HasOne("PremierAthletics.Models.Athlete", "Athlete")
                        .WithMany("eSignatures")
                        .HasForeignKey("AthleteId");

                    b.HasOne("PremierAthletics.Models.Document", "Document")
                        .WithMany("eSignatures")
                        .HasForeignKey("DocumentId");

                    b.Navigation("Athlete");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("PremierAthletics.Models.Athlete", b =>
                {
                    b.Navigation("eSignatures");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PremierAthletics.Models.Document", b =>
                {
                    b.Navigation("eSignatures");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PremierAthletics.Models.Team", b =>
                {
                    b.Navigation("Athletes");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
